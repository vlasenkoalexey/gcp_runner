# AUTOGENERATED! DO NOT EDIT! File to edit: ai_platform_constants.ipynb (unless otherwise specified).

__all__ = ['AcceleratorType', 'ScaleTier', 'MachineType', 'DistributionStrategyType']

# Cell
from enum import Enum

# https://cloud.google.com/sdk/gcloud/reference/ai-platform/jobs/submit/training#--master-accelerator
class AcceleratorType(Enum):
    NVIDIA_TESLA_K80 = 'nvidia-tesla-k80'
    NVIDIA_TESLA_P100 = 'nvidia-tesla-p100'
    NVIDIA_TESLA_V100 = 'nvidia-tesla-v100'
    NVIDIA_TESLA_P4 = 'nvidia-tesla-p4'
    NVIDIA_TESLA_T4 = 'nvidia-tesla-t4'
    TPU_V2 = 'tpu-v2'
    TPU_V2_POD = 'tpu-v2-pod'
    TPU_V3 = 'tpu-v3'
    TPU_V3_POD = 'tpu-v3-pod'


# Cell

# https://cloud.google.com/sdk/gcloud/reference/ai-platform/jobs/submit/training#--master-machine-type
class ScaleTier(Enum):
    """Single worker instance.
    This tier is suitable for learning how to use AI Platform, and for experimenting
    with new models using small datasets."""
    BASIC = 'basic'
    """Single worker instance with a GPU."""
    BASIC_GPU = 'basic-gpu'
    """Single worker instance with a Cloud TPU."""
    BASIC_TPU = 'basic-tpu'
    """The CUSTOM tier is not a set tier, but rather enables you to use your
    own cluster specification. When you use this tier, set values to
    configure your processing cluster according to these guidelines"""
    CUSTOM = 'custom'
    """Many workers and a few parameter servers."""
    STANDARD_1 = 'standard-1';
    """A large number of workers with many parameter servers."""
    PREMIUM_1 = 'premium-1'



# Cell

# https://cloud.google.com/compute/docs/machine-types
class MachineType(Enum):
    N1_STANDARD_4 =     'n1-standard-4'
    N1_STANDARD_8 =     'n1-standard-8'
    N1_STANDARD_16 =    'n1-standard-16'
    N1_STANDARD_32 =    'n1-standard-32'
    N1_STANDARD_64 =    'n1-standard-64'
    N1_STANDARD_96 =    'n1-standard-96'
    N1_HIGHMEM_2 =      'n1-highmem-2'
    N1_HIGHMEM_4 =      'n1-highmem-4'
    N1_HIGHMEM_8 =      'n1-highmem-8'
    N1_HIGHMEM_16 =     'n1-highmem-16'
    N1_HIGHMEM_32 =     'n1-highmem-32'
    N1_HIGHMEM_64 =     'n1-highmem-64'
    N1_HIGHMEM_96 =     'n1-highmem-96'
    N1_HIGHCPU_16 =     'n1-highcpu-16'
    N1_HIGHCPU_32 =     'n1-highcpu-32'
    N1_HIGHCPU_64 =     'n1-highcpu-64'
    N1_HIGHCPU_96 =     'n1-highcpu-96'

# Cell
class DistributionStrategyType(Enum):

    def __str__(self):
        return str(self.value)

    MIRRORED_STRATEGY =              "tf.distribute.MirroredStrategy"
    ONE_DEVICE_STRATEGY =            "tf.distribute.OneDeviceStrategy"
    CENTRAL_STORAGE_STRATEGY =       "tf.distribute.experimental.CentralStorageStrategy"
    PARAMETER_SERVERSTRATEGY =       "tf.distribute.experimental.ParameterServerStrategy"
    MULTI_WORKER_MIRRORED_STRATEGY = "tf.distribute.experimental.MultiWorkerMirroredStrategy"
    TPU_STRATEGY =                   "tf.distribute.experimental.TPUStrategy"
